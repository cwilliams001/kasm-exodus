name: Build and Push Docker Image
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 0 * * 0'  # Runs at 00:00 every Sunday
  workflow_dispatch:  # Allows manual triggering
env:
  IMAGE_NAME: kasm-exodus
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Remove snap Firefox and install Mozilla Firefox
        run: |
          sudo snap remove firefox
          sudo add-apt-repository ppa:mozillateam/ppa -y
          echo '
          Package: *
          Pin: release o=LP-PPA-mozillateam
          Pin-Priority: 1001
          ' | sudo tee /etc/apt/preferences.d/mozilla-firefox
          sudo apt-get update
          sudo apt-get install -y firefox
          firefox --version

      - name: Install dependencies
        run: |
          pip install selenium webdriver-manager
          python -c "import selenium; print(f'Selenium version: {selenium.__version__}')"

      - name: Setup GeckoDriver
        run: |
          GECKO_VERSION=$(curl -sL https://api.github.com/repos/mozilla/geckodriver/releases/latest | grep tag_name | cut -d '"' -f 4)
          wget https://github.com/mozilla/geckodriver/releases/download/${GECKO_VERSION}/geckodriver-${GECKO_VERSION}-linux64.tar.gz
          tar -xvzf geckodriver-*-linux64.tar.gz
          chmod +x geckodriver
          sudo mv geckodriver /usr/local/bin/

      - name: Download latest Exodus
        id: exodus_version
        run: |
          chmod +x download_exodus.sh
          xvfb-run ./download_exodus.sh
          EXODUS_FILE=$(ls exodus-linux-x64-*.deb | head -n1)
          EXODUS_VERSION=$(echo $EXODUS_FILE | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+')
          echo "file=$EXODUS_FILE" >> $GITHUB_OUTPUT
          echo "version=$EXODUS_VERSION" >> $GITHUB_OUTPUT
          echo "Exodus version: $EXODUS_VERSION"

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            williamsct1/${{ env.IMAGE_NAME }}:latest
            williamsct1/${{ env.IMAGE_NAME }}:${{ steps.exodus_version.outputs.version }}
          build-args: |
            EXODUS_PACKAGE=${{ steps.exodus_version.outputs.file }}
